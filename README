

Version 0.1
    今天主要完成了该crm项目的环境搭建，采用了MVC三层架构来作为该项目的逻辑开发架构，
    用Rational Rose工具简单的对该项目进行了简要的分析。绘测了用例图和时序图。

Version 0.2

    1：根据用例图对项目进行模块的划分，建立了各个模块的功能层次包儿。并分析了DB中该项目
    涉及的相关表之间的关系（一对一、一对多、多对一、多对多）。编写了相关的SQL语句，选择
    采用MySQL作为DBMS（因为其轻量、简便，若以后项目DAO层交互频繁，为了避免在高并发访问
    该项目的情况，可以采用SQL集群技术）为其优化。

    2：采用PD（PowerDesigner）工具进行数据库的设计（前期所需要使用的表有tbl_user/tbl_activity
    /tbl_activity_remark）分别是用户表、市场活动表、市场活动备注表。

    3：分析前端界面模型，完成了该项目的登录功能，并绘测出来的相关的时序图。

Version 0.3

    1：优化了登录功能，增加了对其请求拦截的过滤器以及相关的为了避免中文乱码的增强器。（该项
    功能没有使用SpringMVC中自带的拦截器）、采用的是Servlet规范中的Filter来完成该功能。
    该功能的完成即完成了该项目的settings模块。

    2：完成了登录成功以后跳转到workbench的index.jsp页面，开始进行我们该项目中的第二个模块
    workbench（工作台）模块的开发。

    3：在workbench模块中主要有市场活动相关的功能
     完成了在workbench/activity中对其相应的增删改查等一系列的功能，该功能之中有一个亮点（即可以根据
     用户所填写的信息进行动态的展示相关的市场活动列表，还添加了bootstrap中的一些分页插件，是界面更加
     的美观。

Version 0.4

    1：主要在workbench/activity模块当中练习了结合一款优秀的Dao层框架MyBatis的动态SQL相关的知识对
    在workbench/activity中市场活动的查询，以及如何添加bootstrap中的分页插件，在对分页插件添加之后
    进行了类似于在百度搜索栏中的关键字信息，点击下一页进行分页刷新列表的时候不会到达该关键字的信息所查询
    出来的第一页。采用了一个hidden域保存了上一次在搜索栏中的关键字信息。然后根据hidden域中的信息进行分页查询刷新
    列表。

    2：在完成该功能的时候，考虑到了后端需要向前端返回的数据调用前端分页方法的时候会进行大量的复用，故采用VO（值对象）
    的形式将后端所查询的数据封装到一个VO中进行解析为json对象之后写入到响应体中。

    3：完成了上述功能之后（练习了基于ajax的请求）然后进入detail.jsp页面中的相关操作，即使点击市场活动信息列表中的
    市场活动名之后向后台发送一个传统的请求，请求转发到detail.jsp页面，进行该页面的CRUD等操作。

    4：在进行该页面操作的时候，因为所使用的jquery的版本过低，导致前端接收到的json格式不匹配（不兼容），在进行查阅相关
    资料之后，得知产生这个原因的可能很多;例如 json格式不匹配、jquery版本过低、后台的MIME类型不是application/json、发送
    ajax请求的dataType等单词拼写错误，最终采用js原生的eval()函数将json格式的字符串转化为json对象以解决了该问题。


Version 0.5

    1：开启了线索模块功能的相关操作实现。

    2：导入线索、客户、联系人、交易等相关的表;将线索、客户、联系人、交易相关的html页面修改为.jsp页面。



